package com.orm.query;
import java.sql.*;
import java.util.*;
import com.orm.exception.*;
import com.orm.model.*;
import com.orm.annotations.*;

public class InsertValidator{

public static void mapColumns(Map<String,String> columnData,Table tableObj) throws ORMException{

for(String key:columnData.keySet()){

Attribute atr=tableObj.getAttributeByName(key);
if(atr==null) {
throw new ORMException("Exception: No columns/attribute found with name "+key+" in table "+tableObj.getName());
}
}//for ends

}//mapColumns ends


public static boolean isValidStatement(Map<String,String> columnData,Table tableObj) throws ORMException
{

int columnSize=columnData.size();
int columnSizeTable=tableObj.getAttributeCount();

if(columnSize==0){
throw new ORMException("Exception: No columns assosiated with table"+tableObj.getName()+"in the class");

}


System.out.println("column Size:"+columnSize+" columnSizeTb:"+columnSizeTable);
try{
mapColumns(columnData,tableObj);
}catch(Exception e){

throw new ORMException(e.getMessage());
}
if(columnSize>columnSizeTable){
for (String key:columnData.keySet()){
Attribute atr=tableObj.getAttributeByName(key);
if(atr==null){
throw new ORMException(key+" not an attribute/column of "+tableObj.getName());
}

}//for ends

}//if columnSize>columnSizeTable

if(columnSize<=columnSizeTable){


Attribute atr;
Map<String,Attribute> attributeMap = tableObj.getAttributeMap();

//check if the column is primary key or not
String primaryKey=tableObj.getPrimaryKeyAttributeName();
String pkVal=columnData.get(primaryKey);
//System.out.println("check pk");
if(pkVal!=null){
pkVal=pkVal.trim();
}//check if pk is autogenerated or not.
boolean isAutoIncrement=false;
atr=attributeMap.get(primaryKey);
System.out.println(primaryKey);

if((pkVal==null )&& (atr.isAttributeAutoIncrement()==false)){
throw new ORMException("primary key is not auto generated and null found");
}

boolean printException=true;
if(atr.isAttributeAutoIncrement()){
if (pkVal!=null){
if(pkVal.compareTo("")==0) printException=false;

if(pkVal.compareTo("0")==0) printException=false;
if(printException) throw new ORMException (primaryKey+" is autoincrement. You have set the value :("+pkVal+")");

}


}//if of isAttributeAutoIncrement ends



//if no columns are left in columnData and and still some columns are left in table
//then check if those are nullable or not...
String columnPart="insert into" +tableObj.getName();
String valuePart=" VALUES(";

for(String key:attributeMap.keySet()){

if(columnData.containsKey(key)==false){
//check if that colummn/attribute is nullable or not
atr=attributeMap.get(key);
if(atr==null){
System.out.println("str doesnot exsist");
}
boolean isNull=atr.isAttributeNullable();

if(!isNull) throw new ORMException(atr.getName()+" is not nullable set a value for it");

}//if columnData does not contains attribute

//let's check if value of the attribute is null but the table does not allow null values.

String s=columnData.get(key);
s=s.trim();
if(s.compareTo("null")==0) throw new ORMException(atr.getName()+" does not allow null value");
if(s.compareTo("")==0) throw new ORMException(atr.getName()+" does not allow value with spaces as null constraint is applied");
//we have checked for null constarint.
if((atr.isAttributeAutoIncrement())&&(atr.getName().compareTo(primaryKey)!=0)){
printException=true;
if(s.compareTo("")==0) printException=false;
if(s.compareTo("0")==0) printException=false;
if(printException) throw new ORMException(atr.getName()+" is auto increment attribute");

}

//we have checked for autoincrement constraint.


}//for loops ends(iterate over attributeMap)



}//if same size/count ends.


return true;
}//isValidStatement ends


}//class ends
